R = QQ[x_0..x_3,v_0..v_3]
f = sum apply(4, i -> x_i^3)
H = matrix apply(4, i -> apply(4, j -> diff(x_i, diff(x_j,f))))
P = determinant H
I = ideal (f,P) + ideal apply(4, i -> sum apply(4, j -> H_(i,j)*v_j))
I = saturate (I, ideal apply(4, i -> x_i))
Gr = Grassmannian (1,3, CoefficientRing => QQ)
G = ring Gr
RQ = R / I
M = matrix{apply(4, i -> x_i), apply(4, i -> v_i)}
PL = {determinant submatrix (M, {0,1}), determinant submatrix (M, {0,2}), determinant submatrix (M, {1,2}), determinant submatrix (M, {0,3}), determinant submatrix (M, {1,3}), determinant submatrix (M, {2,3})}
F = map(RQ, G, PL)
InflPar = kernel F

----From the ideal in PlÃ¼cker coordinates, we try to get the equation of the parabolic surface
R = QQ[v_0..v_3, p_(0,1), p_(0,2), p_(0,3), p_(1,2), p_(1,3), p_(2,3)]
Pl = matrix{{0, p_(2,3), -p_(1,3), p_(1,2)},
  {-p_(2,3), 0, p_(0,3), -p_(0,2)},
  {p_(1,3), -p_(0,3), 0, p_(0,1)},
  {-p_(1,2), p_(0,2), -p_(0,1), 0}}
InflPar = sub(InflPar, R)
Inc = InflPar + ideal apply(4, i -> sum apply(4, j -> Pl_(i,j)*v_j))
plVars = {p_(0,1), p_(0,2), p_(0,3), p_(1,2), p_(1,3), p_(2,3)}
----saturation by the ideal generated by the p_(i,j) will take too long
----hence, we repeat the following several times
Inc = Inc:ideal(plVars)
Inc = Inc:ideal(plVars)
Inc = Inc:ideal(plVars)
Inc = Inc:ideal(plVars)  --took 1 second to compute
Inc = Inc:ideal(plVars)  --took 2.9 seconds to compute
----at some point, elimination will lead to the desired principal ideal
PX = eliminate(Inc, plVars)
eq = first flatten entries gens PX
factor eq
